{"version":3,"sources":["Services/shortenService.js","Components/shortener.js","Services/authService.js","Components/signup.js","Components/login.js","Routes/private.js","App.js","serviceWorker.js","index.js"],"names":["ShortenService","_this","this","Object","classCallCheck","addUrl","destination","userId","shorten","post","then","response","data","getListOfUrls","axios","create","baseURL","concat","process","withCredentials","Shortener","props","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","preventDefault","_event$target","target","name","value","setState","defineProperty","handleSubmit","state","userLoggedIn","shortenService","url","_id","shortUrl","catch","error","console","log","react_default","a","createElement","onSubmit","type","onChange","placeholder","className","Component","AuthService","signup","username","password","authorise","login","get","logout","Signup","_this$state","authService","setCurrentUser","Login","PrivateRoute","_ref","component","rest","objectWithoutProperties","react_router","assign","render","to","App","currentUser","getCurrentUser","_this2","react_router_dom","Routes_private","exact","path","location","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b145978a.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nclass ShortenService {\r\n  constructor() {\r\n    this.shorten = axios.create({\r\n      baseURL: `${process.env.REACT_APP_API_URL}/url`,\r\n      withCredentials: true\r\n    })\r\n  }\r\n\r\n  addUrl = (destination, userId) => {\r\n    return this.shorten.post('/add', {destination, userId})\r\n    .then(response => response.data)\r\n  }\r\n\r\n/*   getUrl = (id) => {\r\n    return this.shorten.get(`/findbyid/${id}`)\r\n    .then(response => response.data)\r\n  } */\r\n\r\n  getListOfUrls = (userId) => {\r\n    return this.shorten.post('/list', {userId})\r\n    .then(response => response.data)\r\n  }\r\n}\r\n\r\nexport default ShortenService;","import React, { Component } from 'react';\r\nimport ShortenService from '../Services/shortenService';\r\n\r\nclass Shortener extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      destination: '',\r\n      shortUrl: ''\r\n    };\r\n    this.shortenService = new ShortenService();\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    // prevent page refresh\r\n    event.preventDefault();\r\n    \r\n    const {name, value} = event.target;\r\n    this.setState({[name]: value});\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    // prevent page refresh\r\n    event.preventDefault();\r\n\r\n    // get shortPath from api and store destination url in database\r\n    const destination = this.state.destination;\r\n    const userId = this.props.userLoggedIn.userId;\r\n    this.shortenService.addUrl(destination, userId)\r\n    .then(response => {\r\n      const url = `${process.env.REACT_APP_API_URL}/${response._id}`;\r\n      this.setState({shortUrl: url})\r\n    })\r\n    .catch(error => console.log(error))\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <h1>Url Shortener</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input name=\"destination\" type=\"text\" onChange={this.handleChange} value={this.state.destination} placeholder=\"type or paste your url here\" />\r\n          <input className=\"submit\" type=\"submit\" value=\"Get short url\" />\r\n        </form>\r\n        <p>The following short url was created for you</p>\r\n        <p>{this.state.shortUrl}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Shortener;","import axios from 'axios';\r\n\r\nclass AuthService {\r\n  constructor() {\r\n    this.authorise = axios.create({\r\n      baseURL: process.env.REACT_APP_API_URL,\r\n      withCredentials: true\r\n    })\r\n  }\r\n\r\n  signup = (username, password) => {\r\n    return this.authorise.post('/signup', {username, password})\r\n    .then(response => response.data)\r\n  }\r\n\r\n  login = (username, password) => {\r\n    return this.authorise.post('/login', {username, password})\r\n    .then(response => response.data)\r\n  }\r\n\r\n  userLoggedIn = () => {\r\n    return this.authorise.get('/userloggedin')\r\n    .then(response => response.data)\r\n  }\r\n\r\n  logout = () => {\r\n    return this.authorise.post('/logout')\r\n    .then(response => response.data)\r\n  }\r\n}\r\n\r\nexport default AuthService;","import React, { Component } from 'react';\r\nimport AuthService from '../Services/authService';\r\n\r\nclass Signup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        'username': '',\r\n        'password': ''\r\n    };\r\n    this.authService = new AuthService();\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    // maintain input values in state\r\n    event.preventDefault();\r\n    const {name, value} = event.target;\r\n    this.setState({[name]: value});\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const {username, password} = this.state;\r\n    \r\n    this.authService.signup(username, password)\r\n    .then(response => {\r\n      // clear username and password in the form\r\n      this.setState({username: '', password: ''});\r\n      \r\n      // lifting state up: call setCurrentUser function that was passed through props\r\n      // and store the currentUser in the state in App.js\r\n      this.props.setCurrentUser(response);;\r\n    })\r\n    .catch(error => console.log('error: ' + error))        \r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input name=\"username\" type=\"text\" placeholder=\"username\" value={this.state.username} onChange={this.handleChange} />\r\n          <input name=\"password\" type=\"password\" placeholder=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n          <input className=\"submit\" type=\"submit\" value=\"Signup\" />\r\n        </form>\r\n        <p>{this.state.error}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Signup;","import React, { Component } from 'react';\r\nimport AuthService from '../Services/authService';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        'username': '',\r\n        'password': ''\r\n    };\r\n    this.authService = new AuthService();\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    // maintain input values in state\r\n    event.preventDefault();\r\n    const {name, value} = event.target;\r\n    this.setState({[name]: value});\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const {username, password} = this.state;\r\n    \r\n    this.authService.login(username, password)\r\n    .then(response => {\r\n      // clear username and password in the form\r\n      this.setState({username: '', password: ''});\r\n      \r\n      // lifting state up: call setCurrentUser function that was passed through props\r\n      // and store the currentUser in the state in App.js\r\n      this.props.setCurrentUser(response);;\r\n    })\r\n    .catch(error => console.log('error: ' + error))        \r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input name=\"username\" type=\"text\" placeholder=\"username\" value={this.state.username} onChange={this.handleChange} />\r\n          <input name=\"password\" type=\"password\" placeholder=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n          <input className=\"submit\" type=\"submit\" value=\"Login\" />\r\n        </form>\r\n        <p>{this.state.error}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ component: Component, userLoggedIn, ...rest }) => (\r\n  <Route {...rest} userLoggedIn={userLoggedIn} render={((props) => {\r\n    if (userLoggedIn) {\r\n      return <Component {...props} userLoggedIn={userLoggedIn} />;\r\n    } else {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n  })}/>\r\n)\r\n\r\nexport default PrivateRoute;","import React, { Component } from 'react';\nimport { Route, Switch, Redirect, Link } from 'react-router-dom';\nimport './App.css';\n\nimport Shortener from './Components/shortener';\nimport Signup from './Components/signup';\nimport Login from './Components/login';\n\n//import ShortenService from './Services/shortenService';\nimport AuthService from './Services/authService';\n\nimport PrivateRoute from './Routes/private';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {currentUser: null};\n    this.authService = new AuthService();\n    this.getCurrentUser();\n  }\n\n  // check current user in session (only) after page refresh and store in state\n  getCurrentUser() {\n    if (!this.state.currentUser) {\n      this.authService.userLoggedIn()\n      .then(currentUser => {\n        this.setState({currentUser});\n      })\n    }\n  }\n\n  // function setCurrentUser is passed through props to Signup and Login components and will be called from within those components\n  setCurrentUser = (currentUser) => {\n    this.setState({currentUser});\n  }\n\n  logout = () => {\n    // async function logout, return will be executed first\n    this.authService.logout()\n    .then(response => {\n      this.setState({currentUser: null})\n    })\n    return <Redirect to=\"/\" />;\n  }\n\n  render() {\n    const userLoggedIn = this.state.currentUser;\n\n    return (\n      <div className=\"App\">\n        <nav className=\"nav-header\">\n          <ul>\n            <li><Link to=\"/\">Home</Link></li>\n            {!userLoggedIn ? <li><Link to=\"/signup\">Signup</Link></li> : null}\n            {!userLoggedIn ? <li><Link to=\"/login\">Login</Link></li> : null}\n            {userLoggedIn ? <li><Link to=\"/list\">My shortened urls</Link></li> : null}\n            {userLoggedIn ? <li><Link to=\"/logout\">Logout</Link></li> : null}\n          </ul>\n        </nav>\n        <div className=\"container\">\n          <Switch>\n            <PrivateRoute exact path=\"/\" userLoggedIn={userLoggedIn} component={Shortener} />\n            <Route exact path='/signup'>\n              {userLoggedIn ? (<Redirect to=\"/\" />) : (<Signup setCurrentUser={this.setCurrentUser} />)}\n            </Route>\n            <Route exact path='/login'>\n              {userLoggedIn ? (<Redirect to={this.props.location} />) : (<Login setCurrentUser={this.setCurrentUser} />)}\n            </Route>\n            <Route exact path='/logout' render={this.logout} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { BrowserRouter as Router} from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}